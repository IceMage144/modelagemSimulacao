
"""
===========================
Plots with different scales
===========================

Demonstrate how to do two plots on the same axes with different left and
right scales.

The trick is to use *two different axes* that share the same *x* axis.
You can use separate `matplotlib.ticker` formatters and locators as
desired since the two axes are independent.

Such axes are generated by calling the `Axes.twinx` method.  Likewise,
`Axes.twiny` is available to generate axes that share a *y* axis but
have different top and bottom scales.

The twinx and twiny methods are also exposed as pyplot functions.

"""

import numpy as np
import matplotlib.pyplot as plt

fig, ax1 = plt.subplots()
t = np.arange(0, 40)
space = np.asarray(list(map(lambda x: 0.05*(x**2)/2, t)))
vel = np.asarray(list(map(lambda x: 0.05*x, t)))
ax1.plot(t, space, 'b-')
ax1.set_xlabel('time (s)', fontsize = 14)
# Make the y-axis label, ticks and tick labels match the line color.
ax1.set_ylabel('Space (m)', color='b', fontsize = 14 )
ax1.tick_params('y', colors='b')

ax2 = ax1.twinx()
ax2.plot(t, vel, 'r-')
ax2.set_ylabel('Velocity (m/s)', color='r', fontsize = 14)
ax2.tick_params('y', colors='r')

fig.tight_layout()
plt.show()
